AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  unicorn-inventory-app
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Parameters:
  Client:
    Description: Client website for authentication redirects and cors (must start with https://)
    Type: String
    Default: https://unicornrentalapp.com
  TestWithPostman:
    Description: Do you need to test with Postman? (Not recommended for production)
    Type: String
    Default: "false"
    AllowedValues:
      - "true"
      - "false"

Resources:
  AuthStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: ./auth.yaml
      Parameters:
        ClientDomain: !Ref Client
        Postman: !Ref TestWithPostman

  UnicornService:
      Type: AWS::Serverless::HttpApi
      Properties:
        Description: Unicorn Inventory UnicornService
        AccessLogSettings:
          DestinationArn: !GetAtt UnicornInventoryLogGroup.Arn
          Format: '{ "requestId":"$context.requestId", "ip": "$context.identity.sourceIp", "requestTime":"$context.requestTime", "httpMethod":"$context.httpMethod","routeKey":"$context.routeKey", "status":"$context.status","protocol":"$context.protocol", "responseLength":"$context.responseLength", "integrationError":"$context.integrationErrorMessage" }'
        Auth:
          DefaultAuthorizer: OAuth2Authorizer
          Authorizers:
            OAuth2Authorizer:
              AuthorizationScopes:
                - email
              IdentitySource: "$request.header.Authorization"
              JwtConfiguration:
                issuer: !GetAtt AuthStack.Outputs.Issuer
                audience:
                  - !GetAtt AuthStack.Outputs.UserPoolClientId
          
            

  UnicornInventoryLogGroup:
    Type: AWS::Logs::LogGroup

  UnicornHomePageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/home
      Handler: home.lambdaHandler
      Runtime: nodejs14.x
      Events:
        UnicornService:
          Type: HttpApi
          Properties:
            ApiId: !Ref UnicornService
            Path: /home
            Method: get
            Auth:
              Authorizer: NONE


  UnicornInventoryPageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/inventory
      Handler: inventory.lambdaHandler
      Runtime: nodejs14.x
      Events:
        UnicornService:
          Type: HttpApi
          Properties:
            ApiId: !Ref UnicornService
            Path: /inventory
            Method: get
            Auth:
              Authorizer: NONE

  UnicornPricePageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/price
      Handler: price.lambdaHandler
      Runtime: nodejs14.x
      Events:
        UnicornService:
          Type: HttpApi
          Properties:
            ApiId: !Ref UnicornService
            Path: /price
            Method: get
            Auth:
              Authorizer: OAuth2Authorizer
              

              

