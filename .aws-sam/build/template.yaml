AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'unicorn-inventory-app

  '
Globals:
  Function:
    Timeout: 3
Parameters:
  Client:
    Description: Client website for authentication redirects and cors (must start
      with https://)
    Type: String
    Default: https://unicornrentalapp.com
  TestWithPostman:
    Description: Do you need to test with Postman? (Not recommended for production)
    Type: String
    Default: 'false'
    AllowedValues:
    - 'true'
    - 'false'
Resources:
  AuthStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: AuthStack/template.yaml
      Parameters:
        ClientDomain:
          Ref: Client
        Postman:
          Ref: TestWithPostman
    Metadata:
      SamResourceId: AuthStack
  UnicornService:
    Type: AWS::Serverless::HttpApi
    Properties:
      Description: Unicorn Inventory UnicornService
      AccessLogSettings:
        DestinationArn:
          Fn::GetAtt:
          - UnicornInventoryLogGroup
          - Arn
        Format: '{ "requestId":"$context.requestId", "ip": "$context.identity.sourceIp",
          "requestTime":"$context.requestTime", "httpMethod":"$context.httpMethod","routeKey":"$context.routeKey",
          "status":"$context.status","protocol":"$context.protocol", "responseLength":"$context.responseLength",
          "integrationError":"$context.integrationErrorMessage" }'
      Auth:
        DefaultAuthorizer: OAuth2Authorizer
        Authorizers:
          OAuth2Authorizer:
            AuthorizationScopes:
            - email
            IdentitySource: $request.header.Authorization
            JwtConfiguration:
              issuer:
                Fn::GetAtt:
                - AuthStack
                - Outputs.Issuer
              audience:
              - Fn::GetAtt:
                - AuthStack
                - Outputs.UserPoolClientId
  UnicornInventoryLogGroup:
    Type: AWS::Logs::LogGroup
  UnicornHomePageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: UnicornHomePageFunction
      Handler: home.lambdaHandler
      Runtime: nodejs14.x
      Events:
        UnicornService:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: UnicornService
            Path: /home
            Method: get
            Auth:
              Authorizer: NONE
    Metadata:
      SamResourceId: UnicornHomePageFunction
  UnicornInventoryPageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: UnicornInventoryPageFunction
      Handler: inventory.lambdaHandler
      Runtime: nodejs14.x
      Events:
        UnicornService:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: UnicornService
            Path: /inventory
            Method: get
            Auth:
              Authorizer: NONE
    Metadata:
      SamResourceId: UnicornInventoryPageFunction
  UnicornPricePageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: UnicornPricePageFunction
      Handler: price.lambdaHandler
      Runtime: nodejs14.x
      Events:
        UnicornService:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: UnicornService
            Path: /price
            Method: get
            Auth:
              Authorizer: OAuth2Authorizer
    Metadata:
      SamResourceId: UnicornPricePageFunction
